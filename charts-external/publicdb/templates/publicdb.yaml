{{ if .Values.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: publicdb
spec:
  ports:
  - name: '5432'
    port: 5432
  selector:
    app: publicdb
  {{ if .Values.enableLoadBalancer }}
  type: LoadBalancer
  {{ if .Values.loadBalancerIP }}
  loadBalancerIP: {{ .Values.loadBalancerIP | quote }}
  {{ end }}
  {{ end }}
---
{{ if .Values.adminerEnabled }}
apiVersion: v1
kind: Service
metadata:
  name: publicdb-adminer
spec:
  ports:
  - name: '8080'
    port: 8080
  selector:
    app: publicdb
---
{{ end }}
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: publicdb
spec:
  replicas: 1
  strategy: {type: "Recreate"}
  template:
    metadata:
      labels:
        app: publicdb
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: publicdb
        image: "postgres"
        ports:
        - containerPort: 5432
        resources: {{ .Values.resources }}
        env:
        {{ if .Values.global.publicdbSecret }}
        - name: POSTGRES_PASSWORD
          valueFrom: {"secretKeyRef":{"name":"{{ .Values.global.publicdbSecret }}", "key":"POSTGRES_PASSWORD"}}
        {{ else }}
        - name: POSTGRES_PASSWORD
          value: "123456"
        {{ end }}
        {{ if .Values.redashReaderSecret }}
        - name: REDASH_READER_PASSWORD
          valueFrom: {"secretKeyRef":{"name":"{{ .Values.redashReaderSecret }}", "key":"REDASH_READER_PASSWORD"}}
        {{ end }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
          # postgres doesn't let you use the root of a disk (it complaints about having lost+found directory)
          subPath: dbdata
        {{ if .Values.redashReaderSecret }}
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - "-c"
              - |
                while ! su -c 'psql -c "select 1;"' postgres; do
                  sleep 1
                  echo .
                done
                su -c 'psql -c "SELECT 1 FROM pg_roles WHERE rolname='"'USR_NAME'"';"' postgres ||\
                su -c 'psql -c "CREATE ROLE readaccess; GRANT USAGE ON SCHEMA public TO readaccess;
                GRANT SELECT ON ALL TABLES IN SCHEMA public TO readaccess;
                ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO readaccess;
                CREATE USER redash_reader WITH PASSWORD '"'${REDASH_READER_PASSWORD}'"';
                GRANT readaccess TO redash_reader;"' postgres
        {{ end }}
      {{ if .Values.adminerEnabled }}
      - name: adminer
        image: adminer
        ports:
        - containerPort: 8080
      {{ end }}
      volumes:
      - name: data
        gcePersistentDisk:
          pdName: {{ .Values.persistentDiskName | quote }}
{{ end }}
