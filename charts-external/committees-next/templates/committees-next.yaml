{{ if .Values.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: committees-next
spec:
  ports:
  - name: "80"
    port: 80
  selector:
    app: committees-next
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: committees-next
spec:
  replicas: {{.Values.replicas | default "1"}}
  template:
    metadata:
      labels:
        app: committees-next
    spec:
      containers:
      - name: ops
        image: gcr.io/uumpa-public/sk8s-google-storage-sync:v0.0.3b
        resources: {"requests": {"cpu": "50m", "memory": "600Mi"}, "limits": {"cpu": "100m", "memory": "1200Mi"}}
        command:
        - bash
        - "-c"
        - |
          source ~/.bashrc
          gcloud config set project hasadna-oknesset
          while true; do sleep 86400 && curl localhost/sync; done &
          while true; do
            if ! [ -e /state/synclog ] || [ "`cat /state/synclog`" != "synced" ]; then
              echo "Syncing..."
              RES=0
              ! gsutil rsync -Ur "gs://knesset-data-pipelines/data/dist/" /usr/share/nginx/html/ \
                && echo "failed to sync dist data" && RES=1
              if [ "${RES}" == "0" ]; then
                [ -e /state/synclog ] && echo "synced" > /state/synclog
                echo Great Success
                sleep 5
              else
                echo Failure
                echo "sleeping 1 hour to allow debugging, then exiting with error"
                sleep 3600
                exit "${RES}"
              fi
            fi
          done
        volumeMounts:
        - name: nginx-html
          mountPath: /usr/share/nginx/html
        - name: k8s-ops
          mountPath: /k8s-ops
          readOnly: true
        - name: state
          mountPath: /state
      - name: nginx
        image: nginx:alpine
        command:
        - sh
        - "-c"
        - |
          echo "
          server {
              listen       80;
              server_name  localhost;
              location / {
                  root   /usr/share/nginx/html;
                  index  index.html index.htm;
              }
              error_page 404 /404.html;
              location = /sync {
                access_log /state/synclog combined;
                return 404 'Page not found.';
                add_header Content-Type text/plain;
              }
          }
          " > /etc/nginx/conf.d/default.conf
          nginx -g "daemon off;"
        ports:
        - containerPort: 80
        resources: {"requests": {"cpu": "100m", "memory": "200Mi"}, "limits": {"cpu": "300m", "memory": "600Mi"}}
        volumeMounts:
        - name: nginx-html
          mountPath: /usr/share/nginx/html
          readOnly: true
        - name: state
          mountPath: /state
      volumes:
      - name: nginx-html
        emptyDir: {}
      - name: state
        emptyDir: {}
      - name: k8s-ops
        secret:
          secretName: ops
{{ end }}
