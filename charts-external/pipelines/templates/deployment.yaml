{{ if .Values.enabled }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pipelines
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: pipelines
      annotations:
        checksum/nginx-config: {{ include (print $.Template.BasePath "/nginx-configmap.yaml") . | sha256sum }}
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: ssh-socks-proxy
        image: orihoch/ssh-socks-proxy@sha256:94faea572a5ff570d3dea92ca381909603e488c4162f36e56416648647ffd263
        resources: {"requests": {"cpu": "10m", "memory": "10Mi"}, "limits": {"cpu": "20m", "memory": "100Mi"}}
        command:
        - bash
        - "-c"
        - |
          echo $SSH_B64_KEY | base64 -d > secret &&\
          chmod 400 secret &&\
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
              -p 22 -D 0.0.0.0:8123 -C -N -i secret \
              ubuntu@db1.oknesset.org
        livenessProbe:
          exec:
            command:
            - bash
            - "-c"
            - curl -fsS --socks5-hostname "localhost:8123" http://knesset.gov.il/Odata/ParliamentInfo.svc//KNS_KnessetDates >/dev/null
          initialDelaySeconds: 5
          periodSeconds: 5
        env:
        - name: SSH_B64_KEY
          valueFrom:
            secretKeyRef:
              name: "ssh-socks-proxy"
              key: "SSH_B64_KEY"
      - name: pipelines
        image: {{ .Values.image | quote }}
        resources: {"requests": {"cpu": "600m", "memory": "2Gi"}, "limits": {"cpu": "1200m", "memory": "3Gi"}}
        command:
        - "/dpp/docker/run.sh"
        - server
        ports:
        - containerPort: 5000
        env:
        - name: DATASERVICE_HTTP_PROXY
          value: socks5h://127.0.0.1:8123
        - name: DPP_DB_ENGINE
          valueFrom: {"secretKeyRef":{"name":"publicdb", "key":"DPP_DB_ENGINE"}}
        - name: DUMP_TO_STORAGE
          value: "1"
        - name: DUMP_TO_SQL
          value: "1"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secret_service_key
        volumeMounts:
        - name: k8s-ops
          mountPath: /secret_service_key
          subPath: secret.json
          readOnly: true
        - mountPath: /pipelines/data
          name: data
          subPath: data
        - mountPath: /pipelines/dist
          name: data
          subPath: dist
        - mountPath: /var/redis
          name: data
          subPath: redis
      - name: nginx
        image: nginx:alpine
        ports:
        - containerPort: 8000
        resources: {"requests": {"cpu": "50m", "memory": "150Mi"}, "limits": {"memory": "300Mi"}}
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - mountPath: /pipelines/data
          name: data
          subPath: data
      volumes:
      - name: nginx-conf
        configMap:
          name: pipelines-nginx
      - name: k8s-ops
        secret:
          secretName: ops
      - name: data
        gcePersistentDisk:
          pdName: {{ .Values.persistentDiskName | quote }}
{{ end }}
