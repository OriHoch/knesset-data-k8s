{{ if .Values.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |
    server {
      listen 80;
      server_name _;

      include /etc/nginx/conf.d/healthcheck.inc;

      {{ if .Values.enableMetrics }}
      location /grafana/ {
        proxy_pass http://metrics-grafana:3000/;
        include /etc/nginx/conf.d/restricted.inc;
      }
      {{ end }}

      {{ if .Values.enablePipelines }}
      location /pipelines/data/ {
        {{ if or .Values.pipelinesDataNfsServer .Values.pipelinesDataPvcName }}
        index null;
        root /;
        autoindex on;
        {{ else }}
        proxy_pass http://pipelines:8000/pipelines/data/;
        {{ end }}
      }
      location /pipelines/ {
        proxy_pass http://pipelines:5000/;
      }
      {{ end }}

      {{ if .Values.enableAdminer }}
      location /adminer/ {
        proxy_pass http://publicdb-adminer:8080/;
        include /etc/nginx/conf.d/restricted.inc;
      }
      {{ end }}
    }

    {{ if .Values.enableDist }}
    server {
      listen 80;
      server_name www.oknesset.org committees-next.oknesset.org;
      return 301 https://oknesset.org$request_uri;
    }

    server {
      listen 80;
      server_name oknesset.org;
      {{ if or .Values.pipelinesDataNfsServer .Values.pipelinesDataPvcName }}
      error_page 404 =200 @homepageredirect;
      rewrite ^/member/([0-9]*)/ /members/$1.html last;
      location / {
        add_header 'Access-Control-Allow-Origin' '*';
        root /pipelines/data/committees/dist/dist/;
      }
      location @homepageredirect {
        return 302 https://{{ .Values.committeesDomain | default "oknesset.org" }}/index.html;
      }
      {{ else }}
      location / {
        proxy_pass http://pipelines:8080/;
      }
      {{ end }}
    }
    {{ end }}

  healthcheck.inc: |
    location = / {
        return 200 'it works!';
        add_header Content-Type text/plain;
    }

  restricted.inc: |
    {{ if .Values.htpasswdSecretName }}
    auth_basic "Restricted Content";
    auth_basic_user_file /etc/nginx/htpasswd/secret-nginx-htpasswd;
    {{ end }}

{{ end }}
